#include "apriori.h"
#include &lt;iostream&gt;
#include &lt;ctime&gt;
#include &lt;set&gt;
#include &lt;vector&gt;

using namespace std;

void printFrequentItemsets(const vector&lt;vector&lt;set&lt;int&gt;&gt;&gt;& frequentItemsetsPerLevel) {
    for (int i = 0; i &lt; frequentItemsetsPerLevel.size(); ++i) {
        cout &lt;&lt; "Level " &lt;&lt; i + 1 &lt;&lt; ": " &lt;&lt; frequentItemsetsPerLevel[i].size() &lt;&lt; " frequent itemsets" &lt;&lt; endl;

        for (const auto& itemset : frequentItemsetsPerLevel[i]) {
           cout &lt;&lt; "{ ";
            for (int item : itemset) {
                cout &lt;&lt; item &lt;&lt; " ";
     }
            cout &lt;&lt; "} ";
        }
        cout &lt;&lt; endl;
    }
}

int main() {
    string filename = "data4.txt";



    vector&lt;vector&lt;int&gt;&gt; dataset = readDataset(filename);
    int min_sup = 5;
    double min_conf = 0.5;

    vector&lt;vector&lt;set&lt;int&gt;&gt;&gt; frequentItemsetsPerLevel;
    clock_t start = clock();
    apriori(dataset, min_sup, frequentItemsetsPerLevel);
    clock_t end = clock();

    cout &lt;&lt; "Execution time: " &lt;&lt; double(end - start) / CLOCKS_PER_SEC &lt;&lt; " seconds" &lt;&lt; endl;

    printFrequentItemsets(frequentItemsetsPerLevel);

    generateAssociationRules(frequentItemsetsPerLevel, min_conf);

    return 0;
}

